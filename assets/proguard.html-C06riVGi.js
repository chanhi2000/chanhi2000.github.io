import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,d as a,at as c,b as n,t as u,w as s,r as l,o as g,e as r}from"./app-DM0WOK1z.js";const m={},h={id:"frontmatter-title-관련",tabindex:"-1"},v={class:"header-anchor",href:"#frontmatter-title-관련"},b={class:"table-of-contents"};function f(i,e){const t=l("router-link"),d=l("TagLinks");return g(),p("div",null,[a("h1",h,[a("a",v,[a("span",null,u(i.$frontmatter.title)+" 관련",1)])]),a("nav",b,[a("ul",null,[a("li",null,[n(t,{to:"#tip"},{default:s(()=>e[0]||(e[0]=[r("Tip")])),_:1}),a("ul",null,[a("li",null,[n(t,{to:"#proguard-rule-사용방법"},{default:s(()=>e[1]||(e[1]=[r("Proguard Rule 사용방법")])),_:1})]),a("li",null,[n(t,{to:"#난독화-옵션"},{default:s(()=>e[2]||(e[2]=[r("난독화 옵션")])),_:1})]),a("li",null,[n(t,{to:"#예제"},{default:s(()=>e[3]||(e[3]=[r("예제")])),_:1})]),a("li",null,[n(t,{to:"#자주-사용하는-라이브러리-proguard-rule"},{default:s(()=>e[4]||(e[4]=[r("자주 사용하는 라이브러리 Proguard Rule")])),_:1})])])])])]),e[5]||(e[5]=c(`<hr><h2 id="tip" tabindex="-1"><a class="header-anchor" href="#tip"><span>Tip</span></a></h2><p><code>shrinkResources</code> 명령어를 통해서 난독화 과정에서 사용하지 않는 리소스를 제거 할수 있습니다.</p><p>리소스 축소는 코드 축소와 함께만 동작 합니다. 모든 미사용 코드를 제거후 앱에서 사용되지 않는 리소스를 식별 할수 있습니다.</p><h3 id="proguard-rule-사용방법" tabindex="-1"><a class="header-anchor" href="#proguard-rule-사용방법"><span>Proguard Rule 사용방법</span></a></h3><p>Proguard 룰은 필요한것과 불필요한것을 분리 할수 있습니다. 다른 라이브러리 추가시 난독화가 불필요한경우 제거를 해주어야 합니다. 여러 주요 옵션이 많이 있지만 자주 쓰이는 옵션만 정리 하겠습니다.</p><h3 id="난독화-옵션" tabindex="-1"><a class="header-anchor" href="#난독화-옵션"><span>난독화 옵션</span></a></h3><table><thead><tr><th style="text-align:left;">option</th><th style="text-align:left;">description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-dontwarn 패키지명.**</code></td><td style="text-align:left;">지정해서 경고 무시</td></tr><tr><td style="text-align:left;"><code>-keep class 패키지명.**</code></td><td style="text-align:left;">난독화가 필요하지 않은 경우</td></tr><tr><td style="text-align:left;"><code>-ignorewarnings</code></td><td style="text-align:left;">경고 무시</td></tr><tr><td style="text-align:left;"><code>-dontoptimize</code></td><td style="text-align:left;">최적화 하지 않기</td></tr><tr><td style="text-align:left;"><code>-dontshrink</code></td><td style="text-align:left;">사용하지 않는 메소드 유지</td></tr><tr><td style="text-align:left;"><code>-keepclassmembers</code></td><td style="text-align:left;">특정 클래스 멤버 원상태 유지</td></tr><tr><td style="text-align:left;"><code>-keepattributes</code></td><td style="text-align:left;">내부 클래스 원상태 유지 적용</td></tr></tbody></table><h3 id="예제" tabindex="-1"><a class="header-anchor" href="#예제"><span>예제</span></a></h3><div class="language-proguard line-numbers-mode" data-highlighter="prismjs" data-ext="proguard"><pre><code class="language-proguard"><span class="line">-keep class org.xmlpull.v1.** { *; }</span>
<span class="line"></span>
<span class="line">-dontwarn org.ejml.**</span>
<span class="line">-dontwarn org.xmlpull.**</span>
<span class="line">-dontwarn io.reactivex.**</span>
<span class="line">-dontwarn com.squareup.okhttp.**</span>
<span class="line">-dontwarn com.thoughtworks.xstream.**</span>
<span class="line">-dontwarn boofcv.**-dontwarn java.awt.**</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="자주-사용하는-라이브러리-proguard-rule" tabindex="-1"><a class="header-anchor" href="#자주-사용하는-라이브러리-proguard-rule"><span>자주 사용하는 라이브러리 Proguard Rule</span></a></h3><h4 id="_1-retrofit2" tabindex="-1"><a class="header-anchor" href="#_1-retrofit2"><span>1. Retrofit2</span></a></h4><div class="language-proguard line-numbers-mode" data-highlighter="prismjs" data-ext="proguard"><pre><code class="language-proguard"><span class="line"># Platform calls Class.forName on types which do not exist on Android to determine platform.</span>
<span class="line">-dontnote retrofit2.Platform</span>
<span class="line"># Platform used when running on Java 8 VMs. Will not be used at runtime.</span>
<span class="line">-dontwarn retrofit2.Platform$Java8</span>
<span class="line"># Retain generic type information for use by reflection by converters and adapters.</span>
<span class="line">-keepattributes Signature</span>
<span class="line"># Retain declared checked exceptions for use by a Proxy instance.</span>
<span class="line">-keepattributes Exceptions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-glide" tabindex="-1"><a class="header-anchor" href="#_2-glide"><span>2. Glide</span></a></h4><div class="language-proguard line-numbers-mode" data-highlighter="prismjs" data-ext="proguard"><pre><code class="language-proguard"><span class="line">-keep public class * implements com.bumptech.glide.module.GlideModule</span>
<span class="line">-keep public enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$** {</span>
<span class="line">  **[] $VALUES;</span>
<span class="line">  public *;</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"># for DexGuard only</span>
<span class="line">-keepresourcexmlelements manifest/application/meta-data@value=GlideModule</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-picasso" tabindex="-1"><a class="header-anchor" href="#_3-picasso"><span>3.Picasso</span></a></h4><div class="language-proguard line-numbers-mode" data-highlighter="prismjs" data-ext="proguard"><pre><code class="language-proguard"><span class="line">-dontwarn com.squareup.okhttp.**</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr>`,18)),n(d)])}const k=o(m,[["render",f]]),P=JSON.parse('{"path":"/programming/java-android/proguard.html","title":"Proguard","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Proguard","description":"Android > Proguard","icon":"fas fa-user-secret","category":["Android","Proguard"],"tag":["references","android","proguard"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Proguard\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/programming/java-android/proguard.html"}],["meta",{"property":"og:site_name","content":"chanhi2000"}],["meta",{"property":"og:title","content":"Proguard"}],["meta",{"property":"og:description","content":"Android > Proguard"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"proguard"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"references"}]]},"git":{},"readingTime":{"minutes":0.51,"words":154},"filePathRelative":"programming/java-android/proguard.md"}');export{k as comp,P as data};
