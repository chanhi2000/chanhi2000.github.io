import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,d as s,at as l,b as a,t as k,w as t,r as i,o as v,e as p}from"./app-DM0WOK1z.js";const m="/images/android/preferences-example-result.jpg",b={},g={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},h={class:"table-of-contents"};function y(c,n){const e=i("router-link"),o=i("VidStack"),u=i("TagLinks");return v(),d("div",null,[s("h1",g,[s("a",f,[s("span",null,k(c.$frontmatter.title)+" 관련",1)])]),s("nav",h,[s("ul",null,[s("li",null,[a(e,{to:"#background-service-launch"},{default:t(()=>n[0]||(n[0]=[p("Background Service Launch")])),_:1})]),s("li",null,[a(e,{to:"#foreground-service"},{default:t(()=>n[1]||(n[1]=[p("Foreground Service")])),_:1})]),s("li",null,[a(e,{to:"#preferences"},{default:t(()=>n[2]||(n[2]=[p("Preferences")])),_:1})]),s("li",null,[a(e,{to:"#crossfade-animation"},{default:t(()=>n[3]||(n[3]=[p("Crossfade Animation")])),_:1})]),s("li",null,[a(e,{to:"#how-to-detect-shake"},{default:t(()=>n[4]||(n[4]=[p("How to Detect Shake")])),_:1})]),s("li",null,[a(e,{to:"#extension"},{default:t(()=>n[5]||(n[5]=[p("Extension")])),_:1}),s("ul",null,[s("li",null,[a(e,{to:"#animate-values-w-valueanimator"},{default:t(()=>n[6]||(n[6]=[p("Animate values w/ ValueAnimator")])),_:1})])])])])]),n[7]||(n[7]=l(`<hr><h2 id="background-service-launch" tabindex="-1"><a class="header-anchor" href="#background-service-launch"><span>Background Service Launch</span></a></h2><div class="code-block-with-title"><div class="code-block-title-bar" data-title="GodActivity.kt"><span>GodActivity.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> GodActivity <span class="token operator">:</span> AppCompatActivity <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">with</span><span class="token punctuation">(</span>ProcessLifecycleOwner<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            lifecycleScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">                lifecycle<span class="token punctuation">.</span><span class="token function">repeatOnLifecycle</span><span class="token punctuation">(</span>Lifecycle<span class="token punctuation">.</span>State<span class="token punctuation">.</span>RESUMED<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">startService</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    priavte <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">startService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            exponentialRetry <span class="token punctuation">{</span></span>
<span class="line">                context<span class="token punctuation">.</span><span class="token function">startService</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">Intent</span><span class="token punctuation">(</span></span>
<span class="line">                        context<span class="token punctuation">,</span></span>
<span class="line">                        WebSocketService<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e1<span class="token operator">:</span> CancellationException<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// user has gone to the background before service was suceessflly started</span></span>
<span class="line">            <span class="token comment">// the scope has beeen closed along with the process hence we cannot start a background service</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e2<span class="token operator">:</span> IllegalStateException<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">log</span><span class="token punctuation">(</span>e2<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><ol><li>Start the service inside the process lifecycle scope — resumed or started state.</li><li>Wrap the call itself in try-catch to convert a fatal crash into non-fatal.</li><li>Put the call itself inside a loop or exponential retry logic.</li><li>Make sure to handle scope cancelation exception so that no false-positive crashes are spamming your log server.</li></ol><hr><h2 id="foreground-service" tabindex="-1"><a class="header-anchor" href="#foreground-service"><span>Foreground Service</span></a></h2><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MyForeroundService.kt"><span>MyForeroundService.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> MyForeroundService<span class="token operator">:</span> <span class="token function">Service</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onBind</span><span class="token punctuation">(</span>p0<span class="token operator">:</span> Intent<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> IBinder<span class="token operator">?</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">null</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onStartCommand</span><span class="token punctuation">(</span>intent<span class="token operator">:</span> Intent<span class="token operator">?</span><span class="token punctuation">,</span> flag<span class="token operator">:</span> Int<span class="token punctuation">,</span> startId<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">when</span> <span class="token punctuation">(</span>intent<span class="token operator">?</span><span class="token punctuation">.</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            ACTION_START_SERVICE <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                isRunning <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">                <span class="token function">startAsForegroundService</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                </span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            ACTION_STOP_SERVICE <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                isRunning <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">                <span class="token function">stopForeground</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">stopSelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">                   </span>
<span class="line">        <span class="token keyword">return</span> START_STICKY</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> isRunning <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">        <span class="token keyword">const</span> <span class="token keyword">val</span> ACTION_START_SERVICE <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ACTION_START_SERVICE&quot;</span></span></span>
<span class="line">        <span class="token keyword">const</span> <span class="token keyword">val</span> ACTION_STOP_SERVICE <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ACTION_STOP_SERVICE&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">startAsForegroundService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> activityPendingIntent <span class="token operator">=</span> <span class="token function">Intent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> MainActivity<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">            it<span class="token punctuation">.</span>flags <span class="token operator">=</span> Intent<span class="token punctuation">.</span>FLAG_ACTIVITY_NEW_TASK <span class="token operator">or</span> Intent<span class="token punctuation">.</span>FLAG_ACTIVITY_CLEAR_TASK</span>
<span class="line">            PendingIntent<span class="token punctuation">.</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> it<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">val</span> notification<span class="token operator">:</span> Notification <span class="token operator">=</span></span>
<span class="line">                    NotificatoinCompat<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> NotificationConstants<span class="token punctuation">.</span>SOUND_SERVICE_CHANNEL_ID<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">setContentIntent</span><span class="token punctuation">(</span>activityPendingIntent<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">setOngoing</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_service<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Foreground Service&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Foreground service is running&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                        </span>
<span class="line">                <span class="token function">startForeground</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> notification<span class="token punctuation">)</span> </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><hr><h2 id="preferences" tabindex="-1"><a class="header-anchor" href="#preferences"><span>Preferences</span></a></h2><figure><img src="`+m+`" alt="preferences-example-result" tabindex="0"><figcaption>preferences-example-result</figcaption></figure><details class="hint-container details"><summary>Preferences</summary><div class="code-block-with-title"><div class="code-block-title-bar" data-title="app/build.gradle"><span>app/build.gradle</span></div><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy"><pre><code class="language-groovy"><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    implementation <span class="token string">&#39;androidx.preference:preference:1.1.1&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="app/src/main/res/xml/preference.xml"><span>app/src/main/res/xml/preference.xml</span></div><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreferenceScreen</span></span>
<span class="line">  <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://schemas.android.com/apk/res-auto<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SwitchPreferenceCompat</span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">app:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>notifications<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">app:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enable message notifications<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Preference</span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">app:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>feedback<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">app:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Send Feedback<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">app:</span>summary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Report technical issues or suggest new features<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SwitchPreferenceCompat</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PreferenceScreen</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MySettingsFragment.kt"><span>MySettingsFragment.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> MySettingsFragment <span class="token operator">:</span> <span class="token function">PreferenceFragmentCompat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreatePreferences</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">,</span> rootKey<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">setPreferencesFromResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>preferences<span class="token punctuation">,</span> rootKey<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MySettingsActivity.kt"><span>MySettingsActivity.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> MySettingsActivity<span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        supportFragmentManager</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>settings_container<span class="token punctuation">,</span> <span class="token function">MySettingsFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></details><hr><h2 id="crossfade-animation" tabindex="-1"><a class="header-anchor" href="#crossfade-animation"><span>Crossfade Animation</span></a></h2>`,13)),a(o,{src:"/videos/lang-android/crossfade-animation.mp4"}),n[8]||(n[8]=l(`<details class="hint-container details"><summary>Crossfade Animation</summary><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Crossfade Animation"><span>Crossfade Animation</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">fun</span> <span class="token function">crossfade</span><span class="token punctuation">(</span></span>
<span class="line">    viewToShow<span class="token operator">:</span> View<span class="token punctuation">,</span></span>
<span class="line">    viewToHide<span class="token operator">:</span> View</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    viewToHide<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">setListener</span><span class="token punctuation">(</span><span class="token keyword">object</span><span class="token operator">:</span> <span class="token function">AnimatorListenerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onAnimationEnd</span><span class="token punctuation">(</span>animation<span class="token operator">:</span> Animator<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// change the visibility</span></span>
<span class="line">            viewToHide<span class="token punctuation">.</span>isVisible <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></details><hr><h2 id="how-to-detect-shake" tabindex="-1"><a class="header-anchor" href="#how-to-detect-shake"><span>How to Detect Shake</span></a></h2><details class="hint-container details"><summary>How to Detect Shake</summary><div class="code-block-with-title"><div class="code-block-title-bar" data-title="app/build.gradle"><span>app/build.gradle</span></div><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy"><pre><code class="language-groovy"><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    implementation <span class="token interpolation-string"><span class="token string">&quot;com.squareup:seismic:1.0.2&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MainActivity.kt"><span>MainActivity.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> MainActivity<span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        sensorManager</span>
<span class="line">            <span class="token operator">=</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>SENSOR_SERVICE<span class="token punctuation">)</span> <span class="token keyword">as</span> SensorManager</span>
<span class="line">        shakeDetector </span>
<span class="line">            <span class="token operator">=</span> <span class="token function">ShakeDetector</span><span class="token punctuation">(</span>ShakeDetector<span class="token punctuation">.</span><span class="token function">Listener</span> <span class="token punctuation">{</span></span>
<span class="line">                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Shake detected!&quot;</span></span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        shakeDetector<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>sensorManager<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        shakeDetector<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></details><hr><h2 id="extension" tabindex="-1"><a class="header-anchor" href="#extension"><span>Extension</span></a></h2><h3 id="animate-values-w-valueanimator" tabindex="-1"><a class="header-anchor" href="#animate-values-w-valueanimator"><span>Animate values w/ <code>ValueAnimator</code></span></a></h3><details class="hint-container details"><summary>Animate values w/ <code>ValueAnimator</code></summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">ValueAnimator<span class="token punctuation">.</span><span class="token function">ofInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">    duration <span class="token operator">=</span> <span class="token number">3000</span></span>
<span class="line">    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    addUpdateListener <span class="token punctuation">{</span> updatedAnimation <span class="token operator">-&gt;</span> </span>
<span class="line">        textView<span class="token punctuation">.</span>text <span class="token operator">=</span> updatedAnimation<span class="token punctuation">.</span>animatedView<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><hr>`,9)),a(u)])}const A=r(b,[["render",y]]),x=JSON.parse('{"path":"/programming/java-android/tips.html","title":"Tips","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Tips","description":"Android > Tips","icon":"fas fa-lightbulb","category":["Java","Android","Tips"],"tag":["java","kotlin","kt","kts","android","android-studio","idea","intellij-idea","intellij","references"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Tips\\",\\"image\\":[\\"https://chanhi2000.github.io/images/android/preferences-example-result.jpg\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/programming/java-android/tips.html"}],["meta",{"property":"og:site_name","content":"chanhi2000"}],["meta",{"property":"og:title","content":"Tips"}],["meta",{"property":"og:description","content":"Android > Tips"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/images/android/preferences-example-result.jpg"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"references"}],["meta",{"property":"article:tag","content":"intellij"}],["meta",{"property":"article:tag","content":"intellij-idea"}],["meta",{"property":"article:tag","content":"idea"}],["meta",{"property":"article:tag","content":"android-studio"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kts"}],["meta",{"property":"article:tag","content":"kt"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}]]},"git":{},"readingTime":{"minutes":1.6,"words":480},"filePathRelative":"programming/java-android/tips.md"}');export{A as comp,x as data};
