import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,d as e,at as m,b as l,t as p,w as o,e as d,r,o as y}from"./app-DM0WOK1z.js";const f={},h={id:"frontmatter-title-관련",tabindex:"-1"},x={class:"header-anchor",href:"#frontmatter-title-관련"},u={class:"table-of-contents"},b={id:"저장소-repository-관리",tabindex:"-1"},v={class:"header-anchor",href:"#저장소-repository-관리"};function k(n,t){const a=r("router-link"),i=r("Badge"),g=r("TagLinks");return y(),c("div",null,[e("h1",h,[e("a",x,[e("span",null,p(n.$frontmatter.title)+" 관련",1)])]),e("nav",u,[e("ul",null,[e("li",null,[l(a,{to:"#기본-명령어"},{default:o(()=>t[0]||(t[0]=[d("기본 명령어")])),_:1}),e("ul",null,[e("li",null,[l(a,{to:"#저장소-repository-관리"},{default:o(()=>[t[1]||(t[1]=d("저장소 (repository) 관리 ")),l(i,{type:"tip",text:"git-remote",vertical:"middle"}),l(i,{type:"tip",text:"git-fetch",vertical:"middle"}),l(i,{type:"tip",text:"git-pull",vertical:"middle"}),l(i,{type:"tip",text:"git-push",vertical:"middle"})]),_:1})]),e("li",null,[l(a,{to:"#브랜치-branch-관리"},{default:o(()=>t[2]||(t[2]=[d("브랜치 (branch) 관리")])),_:1})]),e("li",null,[l(a,{to:"#commit-관리"},{default:o(()=>t[3]||(t[3]=[d("Commit 관리")])),_:1})]),e("li",null,[l(a,{to:"#submodule-관리"},{default:o(()=>t[4]||(t[4]=[d("Submodule 관리")])),_:1})])])]),e("li",null,[l(a,{to:"#tortoisegit"},{default:o(()=>t[5]||(t[5]=[d("TortoiseGit")])),_:1})])])]),t[7]||(t[7]=e("hr",null,null,-1)),t[8]||(t[8]=e("h2",{id:"기본-명령어",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#기본-명령어"},[e("span",null,"기본 명령어")])],-1)),e("h3",b,[e("a",v,[e("span",null,[t[6]||(t[6]=d("저장소 (repository) 관리 ")),l(i,{type:"tip",text:"git-remote",vertical:"middle"}),l(i,{type:"tip",text:"git-fetch",vertical:"middle"}),l(i,{type:"tip",text:"git-pull",vertical:"middle"}),l(i,{type:"tip",text:"git-push",vertical:"middle"})])])]),t[9]||(t[9]=m('<table><thead><tr><th style="text-align:left;">명령어</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>git remote -vv</code></td><td style="text-align:left;">🔎로컬에 등록 된 원격저장소 정보 조회</td></tr><tr><td style="text-align:left;"><code>git remote add &lt;저장소 별칭&gt; &lt;저장소 주소&gt;</code></td><td style="text-align:left;">📌로컬에 원격저장소 정보등록</td></tr><tr><td style="text-align:left;"><code>git remote rename &lt;저장소 별칭&gt; &lt;새 저장소 별칭&gt;</code></td><td style="text-align:left;">📝로컬에 등록 된 원격저장소 별칭 수정</td></tr><tr><td style="text-align:left;"><code>git remote set-url &lt;저장소 별칭&gt; &lt;새 저장소 주소&gt;</code></td><td style="text-align:left;">📝로컬에 등록 된 원격저장소 주소 수정</td></tr><tr><td style="text-align:left;"><code>git fetch &lt;저장소 별칭&gt;</code></td><td style="text-align:left;">🔄(로컬에 등록 된) 원격저장소 상태 동기화</td></tr><tr><td style="text-align:left;"><code>git fetch --all</code></td><td style="text-align:left;">🔄(로컬에 등록 된) 모든 원격저장소 상태 동기화</td></tr><tr><td style="text-align:left;"><code>git pull &lt;저장소 별칭&gt; &lt;브랜치 명&gt;</code></td><td style="text-align:left;">⏬(지정한 브랜치로) push 된 commit 목록 가져오기 (원격 &gt; 로컬)</td></tr><tr><td style="text-align:left;"><code>git push &lt;저장소 별칭&gt; &lt;브랜치 명&gt;</code></td><td style="text-align:left;">⏫(지정한 브랜치에서) 로컬에서 작업한 commit 목록 push 하기</td></tr></tbody></table><h3 id="브랜치-branch-관리" tabindex="-1"><a class="header-anchor" href="#브랜치-branch-관리"><span>브랜치 (branch) 관리</span></a></h3><table><thead><tr><th style="text-align:left;">명령어</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>git branch -vv</code></td><td style="text-align:left;">🔎브랜치 상태 확인</td></tr><tr><td style="text-align:left;"><code>git branch -d &lt;브랜치 명&gt;</code></td><td style="text-align:left;">❌브랜치 제거</td></tr><tr><td style="text-align:left;"><code>git branch -D &lt;브랜치 명&gt;</code></td><td style="text-align:left;">❌브랜치 강제제거</td></tr><tr><td style="text-align:left;"><code>git checkout -b &lt;브랜치 명&gt;</code></td><td style="text-align:left;">📌브랜치 신규생성</td></tr><tr><td style="text-align:left;"><code>git checkout &lt;브랜치 명&gt;</code></td><td style="text-align:left;">🦶브랜치로 이동</td></tr><tr><td style="text-align:left;"><code>git reset --hard HEAD~1</code></td><td style="text-align:left;">⏪(HEAD가 바라보는 commit점에서) 하나 이전 상태로 이동</td></tr><tr><td style="text-align:left;"><code>git reset --soft HEAD~1</code></td><td style="text-align:left;">⏪(HEAD가 바라보는 commit점에서) 하나 이전 상태로 이동 (내용보존)</td></tr><tr><td style="text-align:left;"><code>git merge &lt;브랜치 명&gt;</code></td><td style="text-align:left;">HEAD가 바라보는 브랜치에서 대상 브랜치와 병합</td></tr><tr><td style="text-align:left;"><code>git rebase &lt;브랜치 명&gt;</code></td><td style="text-align:left;">대상 브랜치의 최신 commit점으로 base 재배치 병합</td></tr></tbody></table><h3 id="commit-관리" tabindex="-1"><a class="header-anchor" href="#commit-관리"><span>Commit 관리</span></a></h3><table><thead><tr><th style="text-align:left;">명령어</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>git status</code></td><td style="text-align:left;">🔎로컬 상태 조회</td></tr><tr><td style="text-align:left;"><code>git add *</code></td><td style="text-align:left;">📌변경파일 STAGE처리</td></tr><tr><td style="text-align:left;"><code>git checkout -- &lt;파일이름&gt;</code></td><td style="text-align:left;">⏪바뀐내용을 전commit상태로 복구</td></tr><tr><td style="text-align:left;"><code>git commit -m &quot;&lt;커밋메세지&gt;&quot;</code></td><td style="text-align:left;">📌STAGE된 내용을 1줄짜리 commit 메세지 등록</td></tr><tr><td style="text-align:left;"><code>git commit --amend</code></td><td style="text-align:left;">📝HEAD위치에 있는 commit 내용 덮어쓰기</td></tr><tr><td style="text-align:left;"><code>git log --all --oneline --pretty --graph</code></td><td style="text-align:left;">🔎commit 히스토리 조회</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>git stash</code></td><td style="text-align:left;">📌로컬 변경작업 임시저장</td></tr><tr><td style="text-align:left;"><code>git stash list</code></td><td style="text-align:left;">🔎임시저장 건 목록 조회</td></tr><tr><td style="text-align:left;"><code>git stash pop</code></td><td style="text-align:left;">⏬(최근) 임시저장 내용 가져오기</td></tr><tr><td style="text-align:left;"><code>git stash drop</code></td><td style="text-align:left;">❌(최근) 임시저장 내용 제거</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>git format-patch &lt;commit 해시&gt;</code></td><td style="text-align:left;">💾커밋정보를 파일형태로 내보내기 (<code>*.patch</code>)</td></tr><tr><td style="text-align:left;"><code>git am &lt;*.patch 파일&gt;</code></td><td style="text-align:left;">📌로컬에 해당patch 커밋으로 등록</td></tr></tbody></table><h3 id="submodule-관리" tabindex="-1"><a class="header-anchor" href="#submodule-관리"><span>Submodule 관리</span></a></h3><table><thead><tr><th style="text-align:left;">명령어</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>git submodule add &lt;저장소 주소&gt; &lt;로컬경로&gt;</code></td><td style="text-align:left;">📌로컬경로에 gitmodule추가</td></tr><tr><td style="text-align:left;"><code>git submodule init</code></td><td style="text-align:left;">📌submodule 초기화 (<code>.gitmodules</code> 파일생성)</td></tr><tr><td style="text-align:left;"><code>git submodule sync</code></td><td style="text-align:left;">🔄submodule 동기화</td></tr><tr><td style="text-align:left;"><code>git submodule update</code></td><td style="text-align:left;">⏬submodule 변경내역 내려받기 <br><ul><li><code>--init</code> 초기화</li><li><code>--remote</code> 원격정보 받아오기</li><li><code>--merge</code> merge해야 할 경우</li></ul></td></tr></tbody></table><hr><h2 id="tortoisegit" tabindex="-1"><a class="header-anchor" href="#tortoisegit"><span>TortoiseGit</span></a></h2><table><thead><tr><th style="text-align:left;">명령어</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>TortoiseGitPRoc /command:log /path:&quot;&lt;작업경로&gt;&quot;</code></td><td style="text-align:left;"><code>git log</code> 화면 열기</td></tr></tbody></table>',10)),l(g)])}const A=s(f,[["render",k]]),E=JSON.parse('{"path":"/programming/git/basics.html","title":"Basics","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Basics","description":"Git > Basics","icon":"fas fa-egg","category":["Git","Basics"],"tag":["git","git-cli","bash","terminal","windows-terminal","tortoisegit","git-remote","git-branch","git-fetch","git-pull","git-push","git-checkout","git-reset","git-merge","git-rebase","git-status","git-add","git-commit","git-log","git-stash"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Basics\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/programming/git/basics.html"}],["meta",{"property":"og:site_name","content":"chanhi2000"}],["meta",{"property":"og:title","content":"Basics"}],["meta",{"property":"og:description","content":"Git > Basics"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"git-stash"}],["meta",{"property":"article:tag","content":"git-log"}],["meta",{"property":"article:tag","content":"git-commit"}],["meta",{"property":"article:tag","content":"git-add"}],["meta",{"property":"article:tag","content":"git-status"}],["meta",{"property":"article:tag","content":"git-rebase"}],["meta",{"property":"article:tag","content":"git-merge"}],["meta",{"property":"article:tag","content":"git-reset"}],["meta",{"property":"article:tag","content":"git-checkout"}],["meta",{"property":"article:tag","content":"git-push"}],["meta",{"property":"article:tag","content":"git-pull"}],["meta",{"property":"article:tag","content":"git-fetch"}],["meta",{"property":"article:tag","content":"git-branch"}],["meta",{"property":"article:tag","content":"git-remote"}],["meta",{"property":"article:tag","content":"tortoisegit"}],["meta",{"property":"article:tag","content":"windows-terminal"}],["meta",{"property":"article:tag","content":"terminal"}],["meta",{"property":"article:tag","content":"bash"}],["meta",{"property":"article:tag","content":"git-cli"}],["meta",{"property":"article:tag","content":"git"}],[{"meta":null},{"property":"og:title","content":"Git > Basics"},{"property":"og:description","content":"Basics"},{"property":"og:url","content":"https://chanhi2000.github.io/programming/git/basics.html"}]]},"git":{},"readingTime":{"minutes":0.86,"words":259},"filePathRelative":"programming/git/basics.md"}');export{A as comp,E as data};
