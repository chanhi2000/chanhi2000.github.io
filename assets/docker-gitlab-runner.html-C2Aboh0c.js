import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as e,at as p,b as t,t as k,w as s,e as n,r,o as h}from"./app-DM0WOK1z.js";const f={},y={id:"frontmatter-title-관련",tabindex:"-1"},R={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"};function L(d,a){const i=r("router-link"),c=r("VPIcon"),u=r("Tabs"),m=r("RouteLink"),b=r("TagLinks");return h(),g("div",null,[e("h1",y,[e("a",R,[e("span",null,k(d.$frontmatter.title)+" 관련",1)])]),e("nav",x,[e("ul",null,[e("li",null,[t(i,{to:"#docker-run"},{default:s(()=>a[0]||(a[0]=[n("Docker Run")])),_:1}),e("ul",null,[e("li",null,[t(i,{to:"#prerequisite-s"},{default:s(()=>a[1]||(a[1]=[n("Prerequisite(s)")])),_:1})]),e("li",null,[t(i,{to:"#run"},{default:s(()=>a[2]||(a[2]=[n("Run")])),_:1})]),e("li",null,[t(i,{to:"#gitlab-정보-등록"},{default:s(()=>a[3]||(a[3]=[n("GitLab 정보 등록")])),_:1})])])])])]),a[12]||(a[12]=p('<hr><h2 id="docker-run" tabindex="-1"><a class="header-anchor" href="#docker-run"><span>Docker Run</span></a></h2><h3 id="prerequisite-s" tabindex="-1"><a class="header-anchor" href="#prerequisite-s"><span>Prerequisite(s)</span></a></h3><div class="hint-container warning"><p class="hint-container-title">For Windows</p><ul><li>Add environment variable <code>GITLAB_RUNNER_HOME</code> = “C:\\GitLab-Runner“</li></ul></div><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>Run</span></a></h3><blockquote><p>(For Linux)</p></blockquote>',6)),t(u,{data:[{id:'<VPIcon icon="fa-brands fa-linux"/>Linux'},{id:'<VPIcon icon="fa-brands fa-windows"/>Windows'}]},{title0:s(({value:l,isActive:o})=>[t(c,{icon:"fa-brands fa-linux"}),a[4]||(a[4]=n("Linux"))]),title1:s(({value:l,isActive:o})=>[t(c,{icon:"fa-brands fa-windows"}),a[5]||(a[5]=n("Windows"))]),tab0:s(({value:l,isActive:o})=>a[6]||(a[6]=[e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[e("pre",null,[e("code",{class:"language-bash"},[e("span",{class:"line"},[e("span",{class:"token function"},"docker"),n(" run "),e("span",{class:"token parameter variable"},"-d"),n(),e("span",{class:"token parameter variable"},"-it"),n(),e("span",{class:"token punctuation"},"\\")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token parameter variable"},"--name"),n(" gitlab-runner "),e("span",{class:"token punctuation"},"\\")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token parameter variable"},"--restart"),n(" always "),e("span",{class:"token punctuation"},"\\")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token parameter variable"},"--volume"),n(),e("span",{class:"token variable"},"$GITLAB_RUNNER_HOME"),n("/config:/etc/gitlab-runner: "),e("span",{class:"token punctuation"},"\\")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token parameter variable"},"--volume"),n(" /var/run/docker.sock:/var/run/docker.sock "),e("span",{class:"token punctuation"},"\\")]),n(`
`),e("span",{class:"line"},"  gitlab/gitlab-runner:alpine3.14-bleeding"),n(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1)])),tab1:s(({value:l,isActive:o})=>a[7]||(a[7]=[e("div",{class:"language-batch line-numbers-mode","data-highlighter":"prismjs","data-ext":"batch"},[e("pre",null,[e("code",{class:"language-batch"},[e("span",{class:"line"},[e("span",{class:"token command"},[e("span",{class:"token keyword"},"docker"),n(" run "),e("span",{class:"token parameter attr-name"},"-d"),n(" -it "),e("span",{class:"token operator"},"^")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token parameter attr-name"},"--name"),n(" gitlab-runner "),e("span",{class:"token operator"},"^")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token parameter attr-name"},"--restart"),n(" always "),e("span",{class:"token operator"},"^")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token parameter attr-name"},"--volume"),n(),e("span",{class:"token variable"},"%GITLAB_HOME%"),e("span",{class:"token parameter attr-name"},[n("/config"),e("span",{class:"token punctuation"},":")]),n("/etc/gitlab-runner: "),e("span",{class:"token operator"},"^")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token parameter attr-name"},"--volume"),n(" /var/run/docker.sock:/var/run/docker.sock "),e("span",{class:"token operator"},"^")]),n(`
`),e("span",{class:"line"},[n("  gitlab/gitlab-runner:alpine3."),e("span",{class:"token number"},"14"),n("-bleeding")])]),n(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1)])),_:1}),a[13]||(a[13]=p(`<div class="hint-container info"><p class="hint-container-title">Option(s)</p><ul><li><code>d</code>: 백그라운드 실행.</li><li><code>name</code>: 컨테이너의 이름을 지정한다.</li><li><code>restart</code>: docker desktop이 실행될 때마다 자동으로 실행하는 명령어.</li><li><code>volume</code>: 데이터가 저장되는 곳을 설정해준다. 저 코드대로 라면 당연히 로컬에 <code>$GITLAB_RUNNER_HOME/gitlab</code> 디렉토리가 있어야 한다. <code>/config</code> 디렉토리는 없다면 자동으로 생성해준다.</li></ul></div><h3 id="gitlab-정보-등록" tabindex="-1"><a class="header-anchor" href="#gitlab-정보-등록"><span>GitLab 정보 등록</span></a></h3><p>컨테이너로 sh접근 후 실행</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> gitlab-runner /bin/bash <span class="token parameter variable">-c</span> <span class="token string">&quot;gitlab-runner register&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>💀실패 시 아래와 같은 경우 발생</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Enter the GitLab instance URL (for example, https://gitlab.com/):</span>
<span class="line">http://localhost:1980/</span>
<span class="line">Enter the registration token:</span>
<span class="line"></span>
<span class="line">Enter a description for the runner:</span>
<span class="line">[29e02072f9d6]:</span>
<span class="line">Enter tags for the runner (comma-separated):</span>
<span class="line"></span>
<span class="line">Enter optional maintenance note for the runner:</span>
<span class="line"></span>
<span class="line">WARNING: Support for registration tokens and runner parameters in the &#39;register&#39; command has been deprecated in GitLab Runner 15.6 and will be replaced with support for authentication tokens. For more information, see https://gitlab.com/gitlab-org/gitlab/-/issues/380872</span>
<span class="line">ERROR: Registering runner... failed                 runner=GR1348941XFBuSpcs status=couldn&#39;t execute POST against http://localhost:1980/api/v4/runners: Post &quot;http://localhost:1980/api/v4/runners&quot;: dial tcp 127.0.0.1:1980: connect: connection refused</span>
<span class="line">PANIC: Failed to register the runner.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>도커 간 network 구성이 되어 있지 않아 GitLab을 접근할 수 없음.</p>`,7)),e("blockquote",null,[e("p",null,[t(m,{to:"/devops/gitlab/docker-compose.html"},{default:s(()=>a[8]||(a[8]=[n("🚢Docker Compose")])),_:1}),a[9]||(a[9]=n(" 페이지에서 ")),a[10]||(a[10]=e("code",null,"docker-compose-gitlab.yml",-1)),a[11]||(a[11]=n(" 을 참고"))])]),a[14]||(a[14]=e("hr",null,null,-1)),t(b)])}const E=v(f,[["render",L]]),N=JSON.parse('{"path":"/devops/gitlab/docker-gitlab-runner.html","title":"GitLab Runner","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"GitLab Runner","description":"Gitlab > GitLab Runner","category":["Gitlab","GitLab Runner"],"tag":["sh","bash","cli","docker","docker-desktop","yml","yaml","docker-container","vm","docker-compose"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GitLab Runner\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/devops/gitlab/docker-gitlab-runner.html"}],["meta",{"property":"og:site_name","content":"chanhi2000"}],["meta",{"property":"og:title","content":"GitLab Runner"}],["meta",{"property":"og:description","content":"Gitlab > GitLab Runner"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"docker-compose"}],["meta",{"property":"article:tag","content":"vm"}],["meta",{"property":"article:tag","content":"docker-container"}],["meta",{"property":"article:tag","content":"yaml"}],["meta",{"property":"article:tag","content":"yml"}],["meta",{"property":"article:tag","content":"docker-desktop"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"cli"}],["meta",{"property":"article:tag","content":"bash"}],["meta",{"property":"article:tag","content":"sh"}]]},"git":{},"readingTime":{"minutes":0.85,"words":256},"filePathRelative":"devops/gitlab/docker-gitlab-runner.md"}');export{E as comp,N as data};
