import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,b as a,t as u,w as r,at as d,r as t,o as k,e as m}from"./app-DM0WOK1z.js";const v={},b={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},g={class:"table-of-contents"},C={class:"hint-container info"};function h(p,s){const e=t("router-link"),o=t("SiteInfo"),l=t("TagLinks");return k(),i("div",null,[n("h1",b,[n("a",f,[n("span",null,u(p.$frontmatter.title)+" 관련",1)])]),n("nav",g,[n("ul",null,[n("li",null,[a(e,{to:"#selectable-component"},{default:r(()=>s[0]||(s[0]=[m("Selectable Component")])),_:1})])])]),s[3]||(s[3]=n("hr",null,null,-1)),s[4]||(s[4]=n("h2",{id:"selectable-component",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#selectable-component"},[n("span",null,"Selectable Component")])],-1)),n("div",C,[s[1]||(s[1]=n("p",{class:"hint-container-title"},"Selectable Component",-1)),a(o,{name:"andariadarcode/JetpackComposeColorPicker",desc:"Contribute to andariadarcode/JetpackComposeColorPicker development by creating an account on GitHub.",url:"https://github.com/andariadarcode/JetpackComposeColorPicker/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://opengraph.githubassets.com/8dd1920c1980d83901d38079fbfd3d871f99365a1f4d0fb422f8a344fd5d2755/andariadarcode/JetpackComposeColorPicker"}),s[2]||(s[2]=d(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="MainActivity.kt"><span>MainActivity.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> MainActivity<span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        setContent <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ColorPicker</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">ColorPicker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> colors <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token function">Color</span><span class="token punctuation">(</span><span class="token number">0xfff9a825</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">COlor</span><span class="token punctuation">(</span><span class="token number">0xffff3d00</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">Color</span><span class="token punctuation">(</span><span class="token number">0xff4caf50</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">Color</span><span class="token punctuation">(</span><span class="token number">0xff9c27b0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">Color</span><span class="token punctuation">(</span><span class="token number">0xff2196f3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> currentColor <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span>colors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span></span>
<span class="line">        horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">,</span></span>
<span class="line">        verticalArrangement <span class="token operator">=</span> Arragement<span class="token punctuation">.</span>Center<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        Row <span class="token punctuation">{</span></span>
<span class="line">            colors<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span> color <span class="token operator">-&gt;</span> </span>
<span class="line">                <span class="token keyword">val</span> isSelected <span class="token operator">=</span> currentColor<span class="token punctuation">.</span>value <span class="token operator">==</span> color</span>
<span class="line">                <span class="token function">Box</span> <span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">                                <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">                                <span class="token punctuation">.</span><span class="token function">clip</span><span class="token punctuation">(</span>CircleShape<span class="token punctuation">)</span></span>
<span class="line">                                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span></span>
<span class="line">                                <span class="token punctuation">.</span><span class="token function">selectable</span><span class="token punctuation">(</span></span>
<span class="line">                                    selected <span class="token operator">=</span> isSelected<span class="token punctuation">,</span></span>
<span class="line">                                    onClick <span class="token operator">=</span> <span class="token punctuation">{</span> currentColor<span class="token punctuation">.</span>value <span class="token operator">=</span> color <span class="token punctuation">}</span></span>
<span class="line">                                <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentColor<span class="token punctuation">.</span>value <span class="token operator">==</span> color<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token function">Icon</span><span class="token punctuation">(</span>imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Filled<span class="token punctuation">.</span>Done<span class="token punctuation">,</span></span>
<span class="line">                            contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Done&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                            tint <span class="token operator">=</span> Color<span class="token punctuation">.</span>White</span>
<span class="line">                            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">align</span><span class="token punctuation">(</span>Alignment<span class="token punctuation">.</span>Center<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token function">Text</span> <span class="token punctuation">(</span></span>
<span class="line">            text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;TEXT&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            color <span class="token operator">=</span> currentColor<span class="token punctuation">.</span>value<span class="token punctuation">,</span></span>
<span class="line">            fontSize <span class="token operator">=</span> <span class="token number">27</span><span class="token punctuation">.</span>sp</span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1))]),s[5]||(s[5]=n("hr",null,null,-1)),a(l)])}const j=c(v,[["render",h]]),x=JSON.parse('{"path":"/programming/java-android/snippets-jetpack-compose.html","title":"Jetpack Compose Snippets","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Jetpack Compose Snippets","description":"Android > Jetpack Compose Snippets","icon":"iconfont icon-jetpack-compose","category":["Java","Android","Jetpack Compose"],"tag":["java","kotlin","kt","android","android-studio","idea","intellij","intellij-idea","jetpack-compose"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Jetpack Compose Snippets\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/programming/java-android/snippets-jetpack-compose.html"}],["meta",{"property":"og:site_name","content":"chanhi2000"}],["meta",{"property":"og:title","content":"Jetpack Compose Snippets"}],["meta",{"property":"og:description","content":"Android > Jetpack Compose Snippets"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"jetpack-compose"}],["meta",{"property":"article:tag","content":"intellij-idea"}],["meta",{"property":"article:tag","content":"intellij"}],["meta",{"property":"article:tag","content":"idea"}],["meta",{"property":"article:tag","content":"android-studio"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kt"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}]]},"git":{},"readingTime":{"minutes":0.53,"words":158},"filePathRelative":"programming/java-android/snippets-jetpack-compose.md"}');export{j as comp,x as data};
